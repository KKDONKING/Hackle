rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is squad owner
    function isSquadOwner(squadId) {
      let squad = get(/databases/$(database)/documents/squads/$(squadId)).data;
      return squad != null && squad.ownerId == request.auth.uid;
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Leaderboard collection rules
    match /leaderboard/{document=**} {
      allow read: if isAuthenticated();  // Anyone logged in can read leaderboard
      allow write: if isAuthenticated(); // Anyone logged in can update scores
    }
    
    // Quizzes collection rules
    match /quizzes/{document=**} {
      allow read: if isAuthenticated();  // Anyone logged in can read quizzes
      allow write: if false;  // Only admins can create/modify quizzes (do this through Firebase Console)
    }
    
    // Squads collection rules
    match /squads/{squadId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.members.hasAny([request.auth.uid]) || 
         request.resource.data.members.hasAny([request.auth.uid]));
      allow delete: if isAuthenticated() && isSquadOwner(squadId);
    }
  }
}